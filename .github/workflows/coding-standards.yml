---

on:  # yamllint disable-line rule:truthy
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

name: 🧹 Coding standards

jobs:
  commit-linting:
    timeout-minutes: 4
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
    steps:
      - name: 📦 Check out the codebase
        uses: actions/checkout@v5

      - name: 🧐 Lint commits using "commitlint"
        uses: wagoid/commitlint-github-action@v6.0.1
        with:
          configFile: ${{ github.workspace }}/.github/.commitlint.config.mjs
          failOnWarnings: false
          failOnErrors: false
          helpURL: 'https://github.com/conventional-changelog/commitlint/#what-is-commitlint'

  yaml-linting:
    timeout-minutes: 4
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
    steps:
      - name: 📦 Check out the codebase
        uses: actions/checkout@v5

      - name: 🧐 Lint YAML files
        uses: ibiqlik/action-yamllint@v3.1.1
        with:
          config_file: .github/.yamllint.yaml
          file_or_dir: '.'
          strict: true

  markdown-linting:
    timeout-minutes: 4
    runs-on: ubuntu-latest
    concurrency:
      cancel-in-progress: true
      group: markdown-linting-${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
    steps:
      - name: 📦 Check out the codebase
        uses: actions/checkout@v5

      - name: 🧐 Lint Markdown files
        uses: DavidAnson/markdownlint-cli2-action@v16.0.0
        with:
          globs: |
            **/*.md
            !CHANGELOG.md

#  composer-linting:
#    timeout-minutes: 4
#    runs-on: ${{ matrix.os }}
#    concurrency:
#      cancel-in-progress: true
#      group: composer-linting-${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
#    strategy:
#      matrix:
#        os:
#          - ubuntu-latest
#        php-version:
#          - '8.1'
#        dependencies:
#          - locked
#    permissions:
#      contents: write
#    steps:
#      - name: 🛠️ Setup PHP
#        uses: shivammathur/setup-php@v2
#        with:
#          php-version: ${{ matrix.php-version }}
#          extensions: sockets
#          ini-values: error_reporting=E_ALL
#          coverage: none
#          tools: composer, phive
#
#      - name: 📦 Check out the codebase
#        uses: actions/checkout@v5
#
#      - name: 🛠️ Setup problem matchers
#        run: |
#          echo "::add-matcher::${{ runner.tool_cache }}/php.json"
#
#      - name: 🤖 Validate composer.json and composer.lock
#        run: composer validate --ansi --strict
#
#      - name: 📥 Install dependencies with composer
#        uses: ramsey/composer-install@v3
#        with:
#          dependency-versions: ${{ matrix.dependencies }}
#
#      - name: 📥 Install dependencies with phive
#        uses: wayofdev/gh-actions/actions/phive/install@v3.2.0
#        with:
#          phive-home: '.phive'
#          trust-gpg-keys: '0xC00543248C87FB13,0x033E5F8D801A2F8D,0x2DF45277AEF09A2F'
#
#      - name: 🔍 Run ergebnis/composer-normalize
#        run: .phive/composer-normalize --ansi --dry-run

  coding-standards:
    permissions:
      contents: write
    uses: spiral/gh-actions/.github/workflows/cs-fix.yml@master
